user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
        listen 80;
        server_name localhost;
        root /var/www/html;
        index index.html;

        # Add headers to handle corporate proxy
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";

        location / {
            try_files $uri $uri/ /index.html;
            
            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
                add_header Access-Control-Max-Age 86400;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }

        # API proxy configuration for corporate environments
        location /api/ {
            # Proxy to PHP-FPM container using simple API (no composer dependencies)
            fastcgi_pass php:9000;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME /var/www/html/api/simple-api.php;
            fastcgi_param DOCUMENT_ROOT /var/www/html/api;
            fastcgi_param REQUEST_URI $request_uri;
            fastcgi_param QUERY_STRING $query_string;
            
            # Corporate proxy compatibility headers
            fastcgi_param HTTP_X_FORWARDED_FOR $proxy_add_x_forwarded_for;
            fastcgi_param HTTP_X_FORWARDED_PROTO $scheme;
            fastcgi_param HTTP_X_REAL_IP $remote_addr;
            fastcgi_param HTTP_HOST $host;
            
            # Timeout settings for slow corporate networks
            fastcgi_read_timeout 300;
            fastcgi_connect_timeout 300;
            fastcgi_send_timeout 300;
            
            # Buffer settings for large responses
            fastcgi_buffer_size 16k;
            fastcgi_buffers 4 16k;
            fastcgi_busy_buffers_size 32k;
            
            # Handle preflight OPTIONS requests for API
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-CSRF-Token";
                add_header Access-Control-Max-Age 86400;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }
        
        # Health check endpoint (bypasses PHP and corporate proxy)
        location /api/health {
            add_header Content-Type application/json;
            add_header Access-Control-Allow-Origin *;
            add_header Cache-Control no-cache;
            add_header X-Proxy-Bypass "nginx-direct";
            return 200 '{"status":"healthy","message":"Bus Booking API is operational","timestamp":"$time_iso8601","server":"nginx-direct","proxy_bypass":true}';
        }
        
        # Direct database test endpoint (bypasses corporate proxy)
        location /api/db-test {
            add_header Content-Type application/json;
            add_header Access-Control-Allow-Origin *;
            add_header Cache-Control no-cache;
            return 200 '{"status":"testing","message":"Database connectivity test","timestamp":"$time_iso8601","note":"Use browser access - corporate proxy may block curl"}';
        }
    }
}