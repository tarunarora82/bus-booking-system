version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: bus_booking_nginx
    ports:
      - "8080:80"
      - "8090:80"
      - "3000:80"
      - "5000:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend:/var/www/html
      - ./backend:/var/www/html/api
    environment:
      # Intel Corporate Proxy with localhost bypass
      - HTTP_PROXY=${HTTP_PROXY:-}
      - HTTPS_PROXY=${HTTPS_PROXY:-}
      - NO_PROXY=${NO_PROXY:-localhost,127.0.0.1,mysql,php,redis}
    depends_on:
      - php
    networks:
      - bus_booking_network

  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
      args:
        - HTTP_PROXY=${HTTP_PROXY:-}
        - HTTPS_PROXY=${HTTPS_PROXY:-}
        - NO_PROXY=${NO_PROXY:-localhost,127.0.0.1,mysql,php,nginx,redis}
    container_name: bus_booking_php
    volumes:
      - ./backend:/var/www/html/api
      - ./frontend:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - JWT_SECRET=${JWT_SECRET}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_FROM=${SMTP_FROM}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      # Intel Corporate Proxy with localhost bypass
      - HTTP_PROXY=${HTTP_PROXY:-}
      - HTTPS_PROXY=${HTTPS_PROXY:-}
      - NO_PROXY=${NO_PROXY:-localhost,127.0.0.1,mysql,php,nginx,redis}
    depends_on:
      - mysql
      - redis
    networks:
      - bus_booking_network

  mysql:
    image: mysql:8.0
    container_name: bus_booking_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      # Intel corporate proxy (if needed for any outbound operations from mysql container)
      HTTP_PROXY: ${HTTP_PROXY:-}
      HTTPS_PROXY: ${HTTPS_PROXY:-}
      NO_PROXY: ${NO_PROXY:-localhost,127.0.0.1,mysql,php,nginx,redis}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "3307:3306"
    networks:
      - bus_booking_network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASS}"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:alpine
    container_name: bus_booking_redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - bus_booking_network
    environment:
      HTTP_PROXY: ${HTTP_PROXY:-}
      HTTPS_PROXY: ${HTTPS_PROXY:-}
      NO_PROXY: ${NO_PROXY:-localhost,127.0.0.1,mysql,php,nginx,redis}

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: bus_booking_phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${DB_USER}
      PMA_PASSWORD: ${DB_PASS}
      HTTP_PROXY: ${HTTP_PROXY:-}
      HTTPS_PROXY: ${HTTPS_PROXY:-}
      NO_PROXY: ${NO_PROXY:-localhost,127.0.0.1,mysql,php,nginx,redis}
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - bus_booking_network

volumes:
  mysql_data:
  redis_data:

networks:
  bus_booking_network:
    driver: bridge